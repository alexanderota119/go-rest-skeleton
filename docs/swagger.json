{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a sample of RESTful api made by go-rest-skeleton",
        "title": "Go-Rest-Skeleton API Example",
        "contact": {
            "name": "Trisna Novi Ashari",
            "url": "https://github.com/trisna-ashari/go-rest-skeleton",
            "email": "trisna.x2@gmail.com"
        },
        "license": {
            "name": "MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8888",
    "paths": {
        "/api/ping": {
            "get": {
                "description": "Check server response.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "development"
                ],
                "summary": "Ping server",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/middleware.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/middleware.errOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.errOutput"
                        }
                    }
                }
            }
        },
        "/api/secret": {
            "get": {
                "description": "Retrieve base64 encoded string of private key and public key through rest api.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "development"
                ],
                "summary": "Generate a secret",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "id"
                        ],
                        "type": "string",
                        "default": "id",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/middleware.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/middleware.errOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.errOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/language": {
            "post": {
                "description": "Change language preference.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Switch language preference",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "id"
                        ],
                        "type": "string",
                        "default": "id",
                        "description": "Language code",
                        "name": "language",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/middleware.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.errOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/middleware.errOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.errOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/login": {
            "post": {
                "description": "Login by email and password.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Authentication login",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "id"
                        ],
                        "type": "string",
                        "default": "id",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "User email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/middleware.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.errOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/middleware.errOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.errOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/logout": {
            "post": {
                "security": [
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Logout using Authorization Header.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Authentication logout",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "id"
                        ],
                        "type": "string",
                        "default": "id",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/middleware.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.errOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/middleware.errOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.errOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/profile": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Get current user profile using Authorization Header.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Authentication profile",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "id"
                        ],
                        "type": "string",
                        "default": "id",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Request id",
                        "name": "Set-Request-Id",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/middleware.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.errOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/middleware.errOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.errOutput"
                        }
                    }
                }
            }
        },
        "/api/v1/external/refresh": {
            "post": {
                "description": "Retrieve a new access_token using refresh token.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Authentication refresh",
                "parameters": [
                    {
                        "enum": [
                            "en",
                            "id"
                        ],
                        "type": "string",
                        "default": "id",
                        "description": "Language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Refresh token from /login",
                        "name": "refresh_token",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/middleware.successOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/middleware.errOutput"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/middleware.errOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/middleware.errOutput"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "middleware.errOutput": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": true
                },
                "error_code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "middleware.successOutput": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "type": "object"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "JWTAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}